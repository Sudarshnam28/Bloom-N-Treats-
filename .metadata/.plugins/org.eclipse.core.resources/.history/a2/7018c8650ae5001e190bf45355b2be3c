package com.ts.CakeProject;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.dao.CategoryDAO;
import com.dao.ProductDAO;
import com.model.Category;
import com.model.Customer;
import com.model.Product;

@CrossOrigin(origins="http://localhost:4200")
@RestController
public class ProductController {

	@Autowired 
	ProductDAO productDao;
	
	@Autowired
	CategoryDAO categoryDao;
	
	@PostMapping("registerProduct")
	public void registerProduct(@RequestBody Product productRequest){
		
		Product product = new Product(); // This line creates a new product object
	    
	    // Fetch category by ID from the DAO
	    Category category = categoryDao.getCategoryById(productRequest.getCategoryById());
	    
	    // Set the category to the product
	    product.setCategory(category);
	  
	    // Register the product using the DAO
	    productDao.registerProduct(product);
	}
	
	@GetMapping("getAllProducts")
	public List<Product> getAllProducts(Product product){
		return productDao.getAllProducts(product);
	}
	
	@GetMapping("getProductById/{productId}")
	public Product getProductById(@PathVariable("productId")int productId){
		return productDao.getProductById(productId);
	}
	@PutMapping("updateProduct")
	public Product updateProduct(@RequestBody Product prod){
	return productDao.updateProduct(prod);
	}
	
	@DeleteMapping("deleteProductById/{productId}")
	public void deleteProductById(@PathVariable("productId")int productId){
		productDao.deleteProductById(productId);
	}
	
	@GetMapping("getAllProductsByCategoryId/categoryId")
	public List<Product> getAllProductsByCategoryId(@PathVariable("categoryId")int categoryId){
		return productDao.getAllProductsByCategoryId(categoryId);
	}
}
